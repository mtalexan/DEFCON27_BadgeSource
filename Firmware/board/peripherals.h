/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_uart.h"
#include "fsl_clock.h"
#include "fsl_lpuart.h"
#include "fsl_i2c.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_tpm.h"
#include "fsl_lptmr.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Definition of peripheral ID */
#define UART2_PERIPHERAL UART2
/* Definition of the clock source frequency */
#define UART2_CLOCK_SOURCE CLOCK_GetFreq(UART2_CLK_SRC)
/* Definition of peripheral ID */
#define LPUART0_PERIPHERAL LPUART0
/* Definition of the clock source frequency */
#define LPUART0_CLOCK_SOURCE 8000000UL
/* LPUART0 interrupt vector ID (number). */
#define LPUART0_SERIAL_RX_TX_IRQN LPUART0_IRQn
/* LPUART0 interrupt vector priority. */
#define LPUART0_SERIAL_RX_TX_IRQ_PRIORITY 0
/* LPUART0 interrupt handler identifier. */
#define LPUART0_SERIAL_RX_TX_IRQHANDLER LPUART0_IRQHandler
/* BOARD_InitPeripherals defines for I2C0 */
/* Definition of peripheral ID */
#define I2C0_PERIPHERAL I2C0
/* Definition of the clock source */
#define I2C0_CLOCK_SOURCE I2C0_CLK_SRC
/* Definition of the clock source frequency */
#define I2C0_CLK_FREQ CLOCK_GetFreq(I2C0_CLOCK_SOURCE)
/* Alias for GPIOC peripheral */
#define GPIOC_GPIO GPIOC
/* Alias for PORTC */
#define GPIOC_PORT PORTC
/* GPIOC interrupt vector ID (number). */
#define GPIOC_IRQN PORTB_PORTC_PORTD_PORTE_IRQn
/* GPIOC interrupt handler identifier. */
#define GPIOC_IRQHANDLER PORTB_PORTC_PORTD_PORTE_IRQHandler
/* Definition of peripheral ID */
#define TPM0_PERIPHERAL TPM0
/* Definition of the clock source frequency */
#define TPM0_CLOCK_SOURCE 8000000UL
/* TPM0 interrupt vector ID (number). */
#define TPM0_IRQN TPM0_IRQn
/* TPM0 interrupt handler identifier. */
#define TPM0_IRQHANDLER TPM0_IRQHandler
/* BOARD_InitPeripherals defines for LPTMR0 */
/* Definition of peripheral ID */
#define LPTMR0_PERIPHERAL LPTMR0
/* Definition of the clock source frequency */
#define LPTMR0_CLK_FREQ 1000UL
/* Definition of the prescaled clock source frequency */
#define LPTMR0_INPUT_FREQ 1000UL
/* Definition of the timer period in us */
#define LPTMR0_USEC_COUNT 5000000UL
/* Definition of the timer period in number of ticks */
#define LPTMR0_TICKS 5000UL
/* LPTMR0 interrupt vector ID (number). */
#define LPTMR0_IRQN LPTMR0_IRQn
/* LPTMR0 interrupt handler identifier. */
#define LPTMR0_IRQHANDLER LPTMR0_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const uart_config_t UART2_config;
extern const lpuart_config_t LPUART0_config;
extern const i2c_master_config_t I2C0_config;
extern const tpm_config_t TPM0_config;
extern const lptmr_config_t LPTMR0_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
